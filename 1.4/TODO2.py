from flask import Flask, jsonify, request
from flask_sqlalchemy import SQLAlchemy

app = Flask(__name__)
app.config["SQLALCHEMY_DATABASE_URI"] = "sqlite:///tasks.db"
db = SQLAlchemy(app)

# üìå –ú–æ–¥–µ–ª—å –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∑–∞–¥–∞—á
class Task(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    task = db.Column(db.String(200), nullable=False)
    done = db.Column(db.Boolean, default=False)

# üìå –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã (—Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ)
with app.app_context():
    db.create_all()

# üìå –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–¥–∞—á
@app.route('/tasks', methods=['GET'])
def get_tasks():
    tasks = Task.query.all()
    return jsonify([{"id": t.id, "task": t.task, "done": t.done} for t in tasks])

# üìå –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏
@app.route('/tasks', methods=['POST'])
def add_task():
    data = request.get_json()
    new_task = Task(task=data["task"])
    db.session.add(new_task)
    db.session.commit()
    return jsonify({"message": "–ó–∞–¥–∞—á–∞ –¥–æ–¥–∞–Ω–∞!"}), 201

# üìå –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏
@app.route('/tasks/<int:task_id>', methods=['PUT'])
def update_task(task_id):
    task = Task.query.get(task_id)
    if not task:
        return jsonify({"error": "–ó–∞–¥–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞!"}), 404
    data = request.get_json()
    task.task = data.get("task", task.task)
    task.done = data.get("done", task.done)
    db.session.commit()
    return jsonify({"message": "–ó–∞–¥–∞—á–∞ –æ–Ω–æ–≤–ª–µ–Ω–∞!"})

# üìå –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏
@app.route('/tasks/<int:task_id>', methods=['DELETE'])
def delete_task(task_id):
    task = Task.query.get(task_id)
    if not task:
        return jsonify({"error": "–ó–∞–¥–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞!"}), 404
    db.session.delete(task)
    db.session.commit()
    return jsonify({"message": "–ó–∞–¥–∞—á–∞ –≤–∏–¥–∞–ª–µ–Ω–∞!"})

if __name__ == '__main__':
    app.run(debug=True)
